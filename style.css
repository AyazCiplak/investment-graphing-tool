/*### TEMPORARY container style properties - used for easy visualization ###*/
#header-title,
#input-parameters-container,
#graphs,
#total-graph,
#comparison-graph {
  border-style: solid;
}

#total-graph,
#comparison-graph {
  border-color: grey;
  border-style: dotted;
}

/*### end of temporary styles ###*/
/*###Note: follow property order display type, size, padding/margins, then colours*/
/*All styler elements first list personal properties, then properties of items contained inside them*/

body {
  width: 95%;
  margin: auto;
}

header {
  display: flex;
  align-items: center;
  justify-content: center;
}

main {
  display: grid;
  grid-gap: 20px;
}

/*If the screen width is above 1000px, splits the main content display into two columns.*/
@media (min-width: 1200px) {
  main {
    grid-template-columns: 2fr 3fr;
  }

  .graph-format-grid {
    padding: 0px 60px;
  }
}

#header-title {
  margin: 15px;
  padding: 20px;
  background-color: grey;

  text-align: center;
}

#graphs {
  height: 670px;
  display: flex;
  flex-direction: column;
}

.graph-format-grid {
  flex: 1;
  background-color: lightgrey;
  border-style: solid;

  /*Sets grid display property for container. Subdivides into 3 rows and 3 columns */
  display: grid;
  grid-template: 4fr 21fr 3fr / 1fr 25fr 2fr;
}

.graph-main-title {
  background-color: grey;
  grid-area: 1/1/2/4;
}

.graph-y-title {
  border-style: dotted;
  grid-area: 1/1/4/2;
}

.graph-x-title {
  border-style: dotted;
  grid-area: 3/1/4/4;
  padding: 0;
}

.graph-display-grid {
  background-color: white;
  grid-area: 2/2/3/4;

  display: grid;
  grid-template: repeat(5, 2fr) 1fr / 1fr repeat(8, 3fr) 2fr;
}

.graph-axes {
  grid-area: 1/2/6/10;
  border-bottom: 3px solid black;
  border-left: 3px solid black;
}

.indicator-lines {
  border-bottom: 1px solid grey;
  margin-left: 10px;
}

#indicator-1 {
  grid-area: 1/1/2/10;
}

#indicator-2 {
  grid-area: 2/1/3/10;
}

#indicator-3 {
  grid-area: 3/1/4/10;
}

#indicator-4 {
  grid-area: 4/1/5/10;
}

.graph-bar-container {
  border-style: dotted;
  border-width: 2px;

  display: flex;
  justify-content: center;
  align-items: flex-end;
}

.graph-bar {
  align-items: center;
  justify-content: center;
  width: 40%;
  height: 10%;
  border-style: solid;
}

#bar-1-container {
  grid-area: 1/2/6/3;
}

#bar-2-container {
  grid-area: 1/3/6/4;
}

#bar-3-container {
  grid-area: 1/4/6/5;
}

#bar-4-container {
  grid-area: 1/5/6/6;
}

#bar-5-container {
  grid-area: 1/6/6/7;
}

#bar-6-container {
  grid-area: 1/7/6/8;
}

#bar-7-container {
  grid-area: 1/8/6/9;
}

#bar-8-container {
  grid-area: 1/9/6/10;
}

.axis-values {
  border-style: dotted;
  border-width: 1px;
}

.x-value-1 {
  grid-area: 6/2/7/3;
}

.x-value-2 {
  grid-area: 6/3/7/4;
}

.x-value-3 {
  grid-area: 6/4/7/5;
}

.x-value-4 {
  grid-area: 6/5/7/6;
}

.x-value-5 {
  grid-area: 6/6/7/7;
}

.x-value-6 {
  grid-area: 6/7/7/8;
}

.x-value-7 {
  grid-area: 6/8/7/9;
}

.x-value-8 {
  grid-area: 6/9/7/10;
}

.y-value-1 {
  grid-area: 5/1/6/2;
}

.y-value-2 {
  grid-area: 4/1/5/2;
}

.y-value-3 {
  grid-area: 3/1/4/2;
}

.y-value-4 {
  grid-area: 2/1/3/2;
}

.y-value-5 {
  grid-area: 1/1/2/2;
}

#total-graph {
  flex: 1;
  margin-bottom: 10px;
}

#comparison-graph {
  flex: 1;
  margin-top: 10px;
}

#input-parameters-container {
  height: 650px;
  background-color: lightgrey;
  padding-top: 10px;
  padding-bottom: 10px;

  display: flex;
  flex-direction: column;
}

.input-box {
  flex: 1;
  margin: 10px 20px;
  border-style: solid;

  display: flex;
  align-items: center;
}

.input-label {
  flex: 3;
  padding-left: 10px;
  border-style: solid;
}

#recurring-input {
  flex: 2;
}

#recurring-input-container {
  flex: 1;
  border-style: solid;

  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}

.input-receiver {
  flex: 2;

  display: flex;
  align-items: center;
  justify-content: center;
}

.numeric-input-form {
  height: 30px;
}

#calculation-elements {
  flex: 1;
  border-style: dotted;
  margin: 10px 20px;

  display: flex;
  flex-direction: column;
}

.calculate-button-container {
  flex: 1;
  width: 40%;
}

.calculate-button {
  padding-left: 10px;
  padding-right: 10px;

  text-align: left;
}

#final-value-display {
  flex: 1;

  display: flex;
}

#final-title {
  flex: 2;
  padding-left: 10px;
  border-style: solid;
}

#final-amount {
  flex: 3;
  border-style: solid;
}

#frequency-options {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.frequency {
  flex: 1;
  border-style: solid;
}

/*Next steps: 
1. Create graph displays in internal container using grid areas

*/
