/*### TEMPORARY container style properties - used for easy visualization ###*/
#header-title,
#input-parameters-container,
#graphs,
#total-graph,
#comparison-graph {
  border-style: solid;
}

#total-graph,
#comparison-graph {
  border-color: grey;
  border-style: dotted;
}

/*### end of temporary styles ###*/
/*###Note: follow property order display type, size, padding/margins, then colours*/
/*All styler elements first list personal properties, then properties of items contained inside them*/

body {
  width: 95%;
  margin: auto;
}

header {
  display: flex;
  align-items: center;
  justify-content: center;
}

main {
  display: grid;
  grid-gap: 20px;
}

/*If the screen width is above 1000px, splits the main content display into two columns.*/
@media (min-width: 1200px) {
  main {
    grid-template-columns: 2fr 3fr;
  }

  .graph-container {
    padding: 0px 60px;
  }
}

#header-title {
  margin: 15px;
  padding: 20px;
  background-color: grey;

  text-align: center;
}

#graphs {
  height: 670px;
  display: flex;
  flex-direction: column;
}

.graph-container {
  flex: 1;
  background-color: lightgrey;
  border-style: solid;

  display: flex;
}

#total-graph {
  flex: 1;
  margin-bottom: 10px;
}

#comparison-graph {
  flex: 1;
  margin-top: 10px;
}

#input-parameters-container {
  height: 650px;
  background-color: lightgrey;
  padding-top: 10px;
  padding-bottom: 10px;

  display: flex;
  flex-direction: column;
}

.input-box {
  flex: 1;
  margin: 10px 20px;
  border-style: solid;

  display: flex;
  align-items: center;
}

.input-label {
  flex: 3;
  padding-left: 10px;
  border-style: solid;
}

#recurring-input {
  flex: 2;
}

#recurring-input-container {
  flex: 1;
  border-style: solid;

  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}

.input-receiver {
  flex: 2;

  display: flex;
  align-items: center;
  justify-content: center;
}

.numeric-input-form {
  height: 30px;
}

#calculation-elements {
  flex: 1;
  border-style: dotted;
  margin: 10px 20px;

  display: flex;
  flex-direction: column;
}

.calculate-button-container {
  flex: 1;
  width: 40%;
}

.calculate-button {
  padding-left: 10px;
  padding-right: 10px;

  text-align: left;
}

#final-value-display {
  flex: 1;

  display: flex;
}

#final-title {
  flex: 2;
  padding-left: 10px;
  border-style: solid;
}

#final-amount {
  flex: 3;
  border-style: solid;
}

#frequency-options {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.frequency {
  flex: 1;
  border-style: solid;
}

/*Next steps: 
1. Make a sub element in the graphs container. Apply left and right padding if
the screen width is over 1200 px (same container as the main element), to reduce width
*Note: Same background colour, different borders for identification
2. Create graph displays in internal container using grid areas

*/
